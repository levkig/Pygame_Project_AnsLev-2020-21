import pygame
from time import sleep
import random

run = True
pygame.font.init()
pygame.init()
sc = pygame.display.set_mode((1800, 900))
f1 = pygame.font.Font(None, 100)
text1 = f1.render('НАЧАТЬ ИГРУ', True, 'White')
f2 = pygame.font.Font(None, 50)
text2 = f2.render('ПОДТВЕРДИТЬ', True, 'White')
f3 = pygame.font.Font(None, 50)
text3 = f3.render('ОТМЕНА', True, 'White')
f4 = pygame.font.Font(None, 50)
text4 = f4.render('Escape', True, 'White')
f5 = pygame.font.Font(None, 50)
text5 = f5.render('Space', True, 'White')

yes = pygame.draw.rect(sc, 'GREEN', (750, 350, 300, 100))
no = pygame.draw.rect(sc, 'RED', (750, 550, 300, 100))
sc.blit(text1, (660, 50))
sc.blit(text2, (765, 360))
sc.blit(text3, (820, 560))
sc.blit(text4, (830, 600))
sc.blit(text5, (850, 400))


pygame.mixer.music.load('music.mp3')
pygame.mixer.music.play(-1)
pygame.display.update()
pos = pygame.mouse.get_pos()
key = pygame.mouse.get_pressed()

while run:
    key = pygame.key.get_pressed()
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            run = False
        if key[pygame.K_ESCAPE]:
            run = False
        if key[pygame.K_SPACE]:
            player_img = pygame.image.load('mario.png')
            player_img.set_colorkey('White')
            player_img2 = pygame.transform.scale(player_img, (110, 110))

            mushroom_img = pygame.image.load('mushroom.png')
            mushroom_img.set_colorkey('White')
            mushroom_img2 = pygame.transform.scale(mushroom_img, (90, 90))

            turtle_img = pygame.image.load('turtle.jpg')
            turtle_img.set_colorkey('White')
            turtle_img2 = pygame.transform.scale(turtle_img, (150, 90))

            pill_img = pygame.image.load('pill.png')
            pill_img.set_colorkey('White')
            pill_img2 = pygame.transform.scale(pill_img, (150, 100))

            all_sprites = pygame.sprite.Group()
            run = True
            pygame.init()
            width = 1800
            height = 900
            speed = 60
            neg = 2
            sc = pygame.display.set_mode((width, height))
            pygame.display.set_caption("Aario")
            clock = pygame.time.Clock()
            used = False


            class Player(pygame.sprite.Sprite):
                def __init__(self, x, y, obstacles_hor, obstacles_ver, mushroom_info):
                    pygame.sprite.Sprite.__init__(self)
                    self.obstacles_hor = obstacles_hor
                    self.obstacles_ver = obstacles_ver
                    self.mushroom_info = mushroom_info
                    self.image = player_img2
                    self.rect = self.image.get_rect()
                    self.rect.x = x
                    self.rect.y = y
                    self.speed_x = 0
                    self.isJump = False
                    self.jumpCount = 10
                    self.neg = 2

                def update(self):
                    self.speed_x = 0
                    key = pygame.key.get_pressed()
                    if key[pygame.K_UP]:
                        self.rect.bottom -= 5
                    if key[pygame.K_DOWN]:
                        for obc in self.obstacles_ver:
                            if self.rect.bottom == obc[1] + 5 and self.rect.x > obc[0] - 100:
                                if self.rect.bottom == obc[1] + 5 and self.rect.x < obc[0] + obc[2]:
                                    return
                        self.rect.bottom += 5
                    if key[pygame.K_LEFT]:
                        for obc in self.obstacles_hor:
                            if self.rect.x == obc[0] + 40 and self.rect.bottom > obc[1]:
                                return
                        self.speed_x = -5
                    if key[pygame.K_RIGHT]:
                        for obc in self.obstacles_hor:
                            if self.rect.x == obc[0] - 100 and self.rect.bottom > obc[1]:
                                return
                        self.speed_x = 5
                    self.rect.x += self.speed_x
                    if self.rect.right > width:
                        self.rect.right = width
                    if self.rect.bottom > height:
                        self.rect.bottom = height
                    if self.rect.top < 0:
                        self.rect.top = 0
                    if self.rect.left < 0:
                        self.rect.left = 0

                def jump(self):
                    if self.isJump:
                        if self.jumpCount >= -10:
                            neg = 2
                            if pygame.sprite.collide_rect(player, pill):
                                neg = 4
                            if self.jumpCount < 0:
                                neg = -2
                                if pygame.sprite.collide_rect(player, pill):
                                    neg -= 4
                            self.rect.y -= self.jumpCount ** 2 * 0.1 * neg
                            self.jumpCount -= 1
                        else:
                            self.isJump = False
                            self.jumpCount = 10


            class Mushroom(pygame.sprite.Sprite):
                def __init__(self, x, y):
                    pygame.sprite.Sprite.__init__(self)
                    self.image = mushroom_img2
                    self.rect = self.image.get_rect()
                    self.rect.x = x
                    self.rect.y = y
                    self.ra = x
                    self.pa = self.rect.top
                    self.ta = self.rect.right
                    self.ya = self.rect.left
                    self.random = random.randint(1300, 1800)


            class Turtle(pygame.sprite.Sprite):
                def __init__(self, x, y):
                    pygame.sprite.Sprite.__init__(self)
                    self.image = turtle_img2
                    self.rect = self.image.get_rect()
                    self.rect.x = x
                    self.rect.y = y
                    self.speed_x = 0

                def update(self):
                    self.speed_x = 0


            class Pills(pygame.sprite.Sprite):
                def __init__(self, x, y):
                    pygame.sprite.Sprite.__init__(self)
                    self.image = pill_img2
                    self.rect = self.image.get_rect()
                    self.rect.x = x
                    self.rect.y = y
                    self.speed_x = 0

                def update(self):
                    self.speed_x = 0


            class Bomb(pygame.sprite.Sprite):
                def __init__(self, x, y):
                    pygame.sprite.Sprite.__init__(self)
                    self.image = pygame.Surface((50, 50))
                    self.image.fill('RED')
                    self.rect = self.image.get_rect()
                    self.rect.x = x
                    self.rect.y = y
                    self.speed_x = 0


            class VerticalWall(pygame.sprite.Sprite):
                def __init__(self, x, y, width_rect, height_rect):
                    pygame.sprite.Sprite.__init__(self)
                    self.x = x
                    self.y = y
                    self.width_rect = width_rect
                    self.height_rect = height_rect

                def draw(self):
                    pygame.draw.rect(sc, 'WHITE', (self.x, self.y, self.width_rect, self.height_rect))


            class HorizontalWall(pygame.sprite.Sprite):
                def __init__(self, x, y, width_rect, height_rect):
                    pygame.sprite.Sprite.__init__(self)
                    self.x = x
                    self.y = y
                    self.width_rect = width_rect
                    self.height_rect = height_rect

                def draw(self):
                    pygame.draw.rect(sc, 'WHITE', (self.x, self.y, self.width_rect, self.height_rect))


            pill = Pills(500, 800)
            turtle = Turtle(1700, 800)
            bomb = Bomb(1600, 800)
            mushroom_info = Mushroom(x=1500, y=800)
            player = Player(0, 800, obstacles_hor=[(1200, 750, 50, 150)],
                            obstacles_ver=[(600, 680, 200, 50),
                                           (300, 730, 200, 50), (950, 680, 200, 50)], mushroom_info=mushroom_info)
            ver_wall = VerticalWall(1200, 750, 50, 150)
            hor_wall = HorizontalWall(600, 680, 200, 50)
            hor_wall2 = HorizontalWall(300, 730, 200, 50)
            hor_wall3 = HorizontalWall(950, 680, 200, 50)
            all_sprites.add()
            all_sprites.add(player)
            all_sprites.add(mushroom_info)
            all_sprites.add(turtle)
            all_sprites.add(pill)
            all_sprites.add(bomb)
            obstacles = [hor_wall, hor_wall2, hor_wall3, ver_wall]

            while run:
                clock.tick(speed)
                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        run = False
                    elif event.type == pygame.KEYDOWN:
                        if event.key == pygame.K_SPACE:
                            player.isJump = True

                sc.fill('Black')
                for item in obstacles:
                    item.draw()
                all_sprites.update()
                all_sprites.draw(sc)
                pygame.display.flip()
                if pygame.sprite.collide_rect(player, pill):
                    all_sprites.remove(pill)
                    seconds_left = 15
                    neg = 4
                    used = True
                if pygame.sprite.collide_rect(player, mushroom_info):
                    if not used:
                        run = False

                player.jump()
            pygame.quit()
